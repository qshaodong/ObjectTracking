
//=======================================================
//  Ports generated by Terasic System Builder
//=======================================================

module new_pipeline(

	//////////// CLOCK //////////
	input 		          		CLOCK_50,
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,

	//////////// LED //////////
	output		     [8:0]		LEDG,
	output		    [17:0]		LEDR,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// VGA //////////
	output		     [7:0]		VGA_B,
	output		          		VGA_BLANK_N,
	output		          		VGA_CLK,
	output		     [7:0]		VGA_G,
	output		          		VGA_HS,
	output		     [7:0]		VGA_R,
	output		          		VGA_SYNC_N,
	output		          		VGA_VS,

	//////////// I2C for Tv-Decoder  //////////
	output		          		I2C_SCLK,
	inout 		          		I2C_SDAT,

	//////////// TV Decoder //////////
	input 		          		TD_CLK27,
	input 		     [7:0]		TD_DATA,
	input 		          		TD_HS,
	output		          		TD_RESET_N,
	input 		          		TD_VS,

	//////////// SDRAM //////////
	output		    [12:0]		DRAM_ADDR,
	output		     [1:0]		DRAM_BA,
	output		          		DRAM_CAS_N,
	output		          		DRAM_CKE,
	output		          		DRAM_CLK,
	output		          		DRAM_CS_N,
	inout 		    [31:0]		DRAM_DQ,
	output		     [3:0]		DRAM_DQM,
	output		          		DRAM_RAS_N,
	output		          		DRAM_WE_N
);

wire aresetn;
assign aresetn = KEY[0];

//Video IO Pipeline
pipeline_wrapper pipeline_wrapper_inst
(
	.aresetn 		(aresetn),

	//////// VGA //////////
	.VGA_B 			(VGA_B),
	.VGA_BLANK_N 	(VGA_BLANK_N),
	.VGA_CLK 		(VGA_CLK),
	.VGA_G			(VGA_G),
	.VGA_HS 		(VGA_HS),
	.VGA_R 			(VGA_R),
	.VGA_SYNC_N 	(VGA_SYNC_N),
	.VGA_VS 		(VGA_VS),

	//////// TV Decoder //////////
	.TD_CLK27 		(TD_CLK27),
	.TD_DATA 		(TD_DATA),
	.TD_HS 			(TD_HS),
	.TD_RESET_N 	(TD_RESET_N),
	.TD_VS 			(TD_VS),

	//////// SDRAM //////////
	.DRAM_ADDR 		(DRAM_ADDR),
	.DRAM_BA 		(DRAM_BA),
	.DRAM_CAS_N 	(DRAM_CAS_N),
	.DRAM_CKE 		(DRAM_CKE),
	.DRAM_CLK 		(DRAM_CLK),
	.DRAM_CS_N 		(DRAM_CS_N),
	.DRAM_DQ 		(DRAM_DQ),
	.DRAM_DQM 		(DRAM_DQM),
	.DRAM_RAS_N		(DRAM_RAS_N),
	.DRAM_WE_N 		(DRAM_WE_N)
);



endmodule
